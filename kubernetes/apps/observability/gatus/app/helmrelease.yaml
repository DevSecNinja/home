---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name gatus
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      ${APP}:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          dnsConfig:
            options:
              - { name: ndots, value: "1" }
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
            runAsGroup: 65534
            fsGroup: 65534
            fsGroupChangePolicy: OnRootMismatch
            seccompProfile: { type: RuntimeDefault }
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: gatus
          init-config:
            dependsOn: init-db
            image: &configSyncImage
              repository: ghcr.io/kiwigrid/k8s-sidecar
              tag: 1.28.0@sha256:4166a019eeafd1f0fef4d867dc5f224f18d84ec8681dbb31f3ca258ecf07bcf2
            env:
              FOLDER: /config
              LABEL: gatus.io/enabled
              NAMESPACE: ALL
              RESOURCE: both
              UNIQUE_FILENAMES: true
              METHOD: LIST
            resources: &configSyncResources
              requests:
                cpu: 10m
                memory: 10Mi
              limits:
                memory: 128Mi
        containers:
          app:
            image:
              repository: ghcr.io/twin/gatus
              tag: v5.13.0@sha256:cac86b023cf61bf18b688532b4496f8703d15df935b0b6c9bbf85c3e3e18d218
            env:
              TZ: ${TIMEZONE}
              GATUS_CONFIG_PATH: /config
              CUSTOM_WEB_PORT: &port 8080
              SECRET_DOMAIN: ${SECRET_DOMAIN}
            envFrom: *envFrom
            resources:
              requests:
                cpu: 10m
                memory: 256M
              limits:
                memory: 512M
          config-sync:
            image: *configSyncImage
            env:
              FOLDER: /config
              LABEL: gatus.io/enabled
              NAMESPACE: ALL
              RESOURCE: both
              UNIQUE_FILENAMES: true
              METHOD: WATCH
            envFrom: *envFrom
            resources: *configSyncResources
    service:
      app:
        controller: *name
        ports:
          http:
            port: *port

    serviceMonitor:
      app:
        serviceName: *name
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1h
            scrapeTimeout: 1m
    ingress:
      app:
        enabled: true
        annotations:
          ## Enable Oauth2 Authentication
          nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
          nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
          ##
          gethomepage.dev/enabled: "true"
          gethomepage.dev/description: "Monitoring & status page for services"
          gethomepage.dev/group: Observability
          gethomepage.dev/icon: gatus
          gethomepage.dev/name: Gatus
          gethomepage.dev/widget.type: ${APP}
          gethomepage.dev/widget.url: http://${APP}.observability.svc.cluster.local:8080
        hosts:
          - host: &host ${GATUS_SUBDOMAIN:-${APP}}.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

        tls:
         - hosts:
             - *host

    serviceAccount:
      create: true
      name: gatus

    persistence:
      config:
        enabled: true
        type: emptyDir
      config-file:
        type: configMap
        name: gatus
        globalMounts:
          - path: /config/config.yaml
            subPath: config.yaml
            readOnly: true
