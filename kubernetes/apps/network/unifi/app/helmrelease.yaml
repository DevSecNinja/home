---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app unifi
spec:
  interval: 30m
  chart:
    spec:
      interval: 15m
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    controllers:
      main:
        pod:
          securityContext:
            runAsUser: 999
            runAsGroup: 999
            fsGroup: 999
            fsGroupChangePolicy: OnRootMismatch
        containers:
          main:
            image:
              repository: docker.io/jacobalberty/unifi
              tag: v8.5.6
            env:
              TZ: "${TIMEZONE}"
              RUNAS_UID0: "false"
              UNIFI_UID: "999"
              UNIFI_GID: "999"
              UNIFI_STDOUT: "true"
              JVM_MAX_HEAP_SIZE: 1024M
            resources:
              requests:
                memory: 950M
              limits:
                memory: 1024M
    service:
      main:
        controller: main
        ports:
          # Web admin
          http:
            port: 8443
          # Device communication
          device-comm:
            enabled: true
            port: 8080
            protocol: TCP
          # STUN
          stun:
            enabled: true
            port: 3478
            protocol: UDP
          # AP discovery
          ap-discovery:
            enabled: true
            port: 10001
            protocol: UDP
          # 'Make controller discoverable on L2 network' option
          l2-discovery:
            enabled: true
            port: 1900
            protocol: UDP
          # Mobile throughput test
          speedtest:
            enabled: true
            port: 6789
            protocol: TCP
          # Remote syslog port
          syslog:
            enabled: true
            port: 5514
            protocol: UDP
          # Guest portal redirect port
          guest-portal-https:
            enabled: false
            port: 8843
            protocol: TCP
          # Guest portal redirect port
          guest-portal-http:
            enabled: false
            port: 8880
            protocol: TCP
    ingress:
      main:
        className: internal
        annotations:
          ## Enable Oauth2 Authentication
          nginx.ingress.kubernetes.io/auth-url: "http://oauth2-proxy.security.svc.cluster.local:4180/oauth2/auth"
          nginx.ingress.kubernetes.io/auth-signin: "https://auth.${SECRET_DOMAIN}/oauth2/auth/oauth2/start?rd=$scheme://$host$request_uri"
          ##
          # Allow Home Assistant to access Unifi without auth
          nginx.ingress.kubernetes.io/auth-snippet: |
            if ($remote_addr = "192.168.50.2") {
              return 200;
            }
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: "Network"
          gethomepage.dev/description: "Ubiqiti UniFi Network Controller"
          gethomepage.dev/name: "UniFi"
          gethomepage.dev/icon: *app
          # TODO: [unifi] Investigate using homepage widget
          # https://gethomepage.dev/widgets/services/unifi-controller/
        hosts:
          # - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
          - host: &host "unifi-new.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      data:
        storageClass: openebs-hostpath
        accessMode: ReadWriteOnce
        size: 10Gi
        globalMounts:
          - path: /unifi
