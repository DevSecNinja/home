---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name oauth2-proxy
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      ${APP}:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: quay.io/oauth2-proxy/oauth2-proxy
              tag: v7.7.1
            env:
              TZ: "${TIMEZONE}"
              OAUTH2_PROXY_HTTP_ADDRESS: 0.0.0.0:4180
              OAUTH2_PROXY_METRICS_ADDRESS: 0.0.0.0:44180
              OAUTH2_PROXY_COOKIE_SECURE: true
              OAUTH2_PROXY_SCOPE: "openid profile email"
              OAUTH2_PROXY_PROVIDER: azure

              OAUTH2_PROXY_SESSION_STORE_TYPE: redis
              OAUTH2_PROXY_REDIS_USE_SENTINEL: "true"

              OAUTH2_PROXY_PASS_AUTHORIZATION_HEADER: true
              OAUTH2_PROXY_PASS_HOST_HEADER: true
              OAUTH2_PROXY_PASS_ACCESS_TOKEN: true
              OAUTH2_PROXY_PASS_USER_HEADERS: true
              OAUTH2_PROXY_PREFER_EMAIL_TO_USER: true
              OAUTH2_PROXY_SET_AUTHORIZATION_HEADER: true
              OAUTH2_PROXY_SET_XAUTHREQUEST: true
              OAUTH2_PROXY_REVERSE_PROXY: true
              OAUTH2_PROXY_BANNER: "-"
              OAUTH2_PROXY_FOOTER: "-"
              OAUTH2_PROXY_SKIP_PROVIDER_BUTTON: true
              OAUTH2_PROXY_TLS_MIN_VERSION: "TLS1.3"
            envFrom:
              - secretRef:
                  name: oauth2-proxy-secret

            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: 4180
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ready
                    port: 4180
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10

            resources:
              requests:
                cpu: 100m
                memory: 250M
              limits:
                memory: 1G

    service:
      app:
        controller: *name
        ports:
          http:
            port: 4180

    ingress:
      app:
        enabled: true
        className: internal
        hosts:
          - host: &host auth.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
