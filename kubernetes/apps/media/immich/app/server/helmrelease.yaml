---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app immich-server
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    defaultPodOptions:
      enableServiceLinks: false
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [65537]
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: *app

    controllers:
      immich:
        annotations:
          reloader.stakater.com/auto: "true"
          configmap.reloader.stakater.com/reload: &configMap immich
          secret.reloader.stakater.com/reload: &secret immich
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - configMapRef:
                  name: *configMap
              - secretRef:
                  name: *secret
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.120.0@sha256:ac215f5c1a52f7b25617924db61d54bb72b534d902ccb58eb595cdba98899aa3
            envFrom: *envFrom
            env:
              LOG_LEVEL: log
              SERVER_PORT: &port 2283
              IMMICH_MEDIA_LOCATION: &mediaLocation /usr/src/app/upload
              IMMICH_CONFIG_FILE: &configLocation /config/immich-config.json
            resources:
              requests:
                cpu: 50m
              limits:
                memory: 1100M
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/server/ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 30
              readiness: *probes
              startup:
                enabled: false
    service:
      app:
        controller: immich
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Media
          gethomepage.dev/name: Immich
          gethomepage.dev/description: "Photo library and management"
          gethomepage.dev/icon: immich
          # TODO: [immich] Enable widget
          # gethomepage.dev/widget.type: immich
          # gethomepage.dev/widget.url: "http://photos.media.svc.cluster.local:2283"
          # gethomepage.dev/widget.key: "tobeadded"
          # gethomepage.dev/widget.version: "2"
        hosts:
          - host: &host "photos.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        type: emptyDir
      config-file:
        type: configMap
        name: immich-server-config
        globalMounts:
          - path: *configLocation
            subPath: immich-config.json
            readOnly: true
      library:
        storageClass: openebs-hostpath
        accessMode: ReadWriteOnce
        nameOverride: immich-library
        size: 10Gi
        globalMounts:
          - path: *mediaLocation
