---
- hosts: docker
  become: yes
  tasks:
    - include_tasks: ../tasks/update-os.yaml

    - name: Install dependencies
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - ca-certificates
        - curl
        - gnupg

    # To use the sops_encrypt module on a remote host, you need to install sops on it:
    - name: Install sops on remote hosts
      ansible.builtin.include_role:
        name: community.sops.install
      vars:
        sops_version: "3.8.1"  # leaving this blank installs the latest version

    - include_tasks: tasks/ufw.yaml

    - name: Add Docker's APT repository key
      ansible.builtin.get_url:
        url: "{{ docker__apt_repository_url }}/gpg"
        dest: "/etc/apt/keyrings/docker.asc"
        checksum: "{{ docker__apt_key_checksum }}"
        owner: "root"
        group: "root"
        mode: "0644"

    - name: Configure Docker's upstream APT repository
      ansible.builtin.apt_repository:
        repo: "{{ docker__apt_repository }}"
        update_cache: true

    - name: Ensure group "docker" exists with correct gid
      ansible.builtin.group:
        name: docker
        state: present
        gid: "{{ pgid }}"

    - name: Add user to docker group
      user:
        name: "{{ansible_user}}"
        group: docker
        uid: "{{ puid }}"
        expires: -1

    - name: Install Docker
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - docker-buildx-plugin
        - docker-compose-plugin

    - name: Create Docker configuration directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: "directory"
        owner: "{{ansible_user}}"
        group: "docker"
        mode: "0755"
      loop:
        - "/srv/docker/data"
        - "/srv/docker/data/backup"
        - "/srv/docker/data/traefik/acme"

    - name: Create acme config file for traefik
      file:
        path: "/srv/docker/data/traefik/acme/acme.json"
        state: touch
        mode: '0600'

    - name: Create Traefik log file
      file:
        path: "/srv/docker/data/traefik/traefik.log"
        state: touch
        mode: '0755'

    - name: Set DNS Server
      ini_file:
        path: /etc/systemd/resolved.conf
        section: Resolve
        option: DNS
        value: 9.9.9.9
        no_extra_spaces: yes
      notify:
        - "Restart systemd-resolved"

    - name: Set DNS Fallback Server
      ini_file:
        path: /etc/systemd/resolved.conf
        section: Resolve
        option: FallbackDNS
        value: 149.112.112.112
        no_extra_spaces: yes
      notify:
        - "Restart systemd-resolved"

    - name: Set default as DNS operational mode
      ini_file:
        path: /etc/NetworkManager/NetworkManager.conf
        section: main
        option: dns
        value: default
        no_extra_spaces: yes
      notify:
        - "Remove STUB"
        - "Restart systemd-resolved"

    - name: Disable systemd-resolved
      systemd:
        name: systemd-resolved
        state: stopped
        enabled: no
        masked: yes
      notify:
        - "Remove STUB"
        - "Restart systemd-resolved"

  handlers:
    - import_tasks: ../handlers/main.yml
