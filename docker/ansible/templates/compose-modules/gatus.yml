services:
  gatus:
    image: twinproduction/gatus:v5.12.1@sha256:e808d45f327450a42d8f670160bf4a596950dfd2824aea3825f03b49c2d7e61c
    container_name: gatus
    depends_on:
      - traefik
      - gatus-db
    restart: always
    networks:
      - t2_proxy
      - gatus-backend
    security_opt:
      - no-new-privileges=true
    mem_limit: 500m
    environment:
      - TZ=${TZ}
      # Database
      - DB_ENGINE=postgres
      - DB_DATABASE=gatus
      - DB_USER=gatus
      - DB_PASSWORD=${GATUS_DB_PASSWORD}
      - DB_HOST=gatus-db
      - DB_PORT=5432
      # Webhooks
      - GATUS_MSTEAMS_WEBHOOK_URL=${GATUS_MSTEAMS_WEBHOOK_URL}
      # Other
      - DOMAINNAME=${DOMAINNAME}
      - IP_SVLEXT=${GENERIC_IPS_SVLEXT}
    volumes:
      - $DOCKERDIR/data/gatus/config.yaml:/config/config.yaml
    labels:
      # Homepage
      - homepage.group=Infrastructure
      - homepage.name=Gatus
      - homepage.icon=gatus.svg
      - homepage.href=https://status.$DOMAINNAME
      - homepage.description=Uptime Monitoring
      ## Widget
      - homepage.widget.type=gatus
      - homepage.widget.url=http://gatus:8080
      # Group
      - org.label-schema.group=productivity
      # Traefik
      - "traefik.enable=true"
      ## Middlewares
      - "traefik.http.routers.gatus-rtr.middlewares=chain-auth@file"
      - "traefik.http.routers.gatus-rtr.rule=Host(`status.$DOMAINNAME`)"
      ## HTTP Services
      - "traefik.http.routers.gatus-rtr.service=gatus"
      ### Enable the server port
      - "traefik.http.services.gatus.loadbalancer.server.port=8080"

  gatus-db:
    image: docker.io/library/postgres:16.4-alpine@sha256:492898505cb45f9835acc327e98711eaa9298ed804e0bb36f29e08394229550d
    container_name: gatus-db
    restart: always
    security_opt:
      - no-new-privileges=true
    mem_limit: 1024m
    volumes:
      - gatus_db_data:/var/lib/postgresql/data
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - POSTGRES_DB=gatus
      - POSTGRES_USER=gatus
      - POSTGRES_PASSWORD=${GATUS_DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gatus-backend

  gatus-db-backup:
    container_name: gatus-db-backup
    image: tiredofit/db-backup:4.1.4@sha256:6df3a87b288d00d2f00f87f3dd2314eba793d3a34b500d3fcef3a1b598946e3d
    depends_on:
      - gatus-db
    volumes:
      - $DOCKERDIR/data/backup:/backup
    mem_limit: 1024m
    networks:
      - gatus-backend
      - mailrise
    environment:
      - TIMEZONE=${TZ}
      - USER_DBBACKUP=${PUID}
      - GROUP_DBBACKUP=${PGID}
      - CONTAINER_NAME=gatus-db-backup
      - CONTAINER_ENABLE_MONITORING=FALSE # Disables Zabbix backup statistics

      - ENABLE_NOTIFICATIONS=TRUE
      - NOTIFICATION_TYPE=EMAIL
      - SMTP_HOST=mailrise
      - SMTP_PORT=${NOTIFICATIONS_MAILRISE_SMTP_PORT}
      - MAIL_TO=msteams@mailrise.xyz
      - MAIL_FROM=gatus-db-backup

      - DEFAULT_CHECKSUM=SHA1        # Set standard checksum to SHA1
      - DEFAULT_COMPRESSION=ZSTD     # Compress all with ZSTD
      - DEFAULT_BACKUP_INTERVAL=1440 # Backup every 1440 minutes = 24 hours
      - DEFAULT_BACKUP_BEGIN=0000    # Start backing up at midnight
      - DEFAULT_CLEANUP_TIME=2880    # Cleanup backups after two days

      - DEFAULT_ENCRYPT=TRUE                            # Encrypt backup files with GPG
      - DEFAULT_ENCRYPT_PASSPHRASE=${DB_ENC_PASSPHRASE} # Set encryption password

      - DB01_TYPE=pgsql
      - DB01_HOST=gatus-db
      - DB01_NAME=gatus
      - DB01_USER=gatus
      - DB01_PORT=5432
      - DB01_PASS=${GATUS_DB_PASSWORD}
    restart: always
    security_opt:
      - no-new-privileges=true

volumes:
  gatus_db_data:

networks:
  gatus-backend:
    name: gatus-backend
    driver: bridge
