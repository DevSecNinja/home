services:
  nextcloud:
    image: nextcloud:31.0.7-apache@sha256:4bd3671cdc26122bbc1e06785c65cae80404b1f525c37f4f2c13b08073beb270
    container_name: nextcloud
    depends_on:
      - traefik
      - nextcloud-db
      - nextcloud-redis
    restart: always
    networks:
      - nextcloud-frontend
      - nextcloud-backend
    security_opt:
      - no-new-privileges=true
    mem_limit: 1024m
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      # MySQL
      - MYSQL_HOST=nextcloud-db
      - MYSQL_PASSWORD=${NEXTCLOUD_MYSQL_PASSWORD}
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      # Redis
      - REDIS_HOST=nextcloud-redis
      - REDIS_HOST_PASSWORD=${NEXTCLOUD_REDIS_PASSWORD}
      # Nextcloud
      - NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_ADMIN_USER}
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD}
      - NEXTCLOUD_TRUSTED_DOMAINS=${NEXTCLOUD_TRUSTED_DOMAINS}
      - TRUSTED_PROXIES=traefik # Traefik = hostname of Traefik container
      - OVERWRITEPROTOCOL=HTTPS # Fixes issue with iOS App Auth not working
      - OVERWRITECLIURL=https://cloud.$DOMAINNAME # Fixes issue with iOS App Auth not working
    volumes:
      - nextcloud_data:/var/www/html
    labels:
      # Homepage
      - homepage.group=Productivity
      - homepage.name=Nextcloud
      - homepage.icon=nextcloud.svg
      - homepage.href=https://cloud.$DOMAINNAME
      - homepage.description=Cloud Service
      # Group
      - org.label-schema.group=productivity
      # Traefik
      - "traefik.enable=true"
      - "traefik.docker.network=nextcloud-frontend"
      ## Middlewares
      ## Using no-auth chain since Nextcloud App doesn't support auth proxy
      - "traefik.http.routers.nextcloud-rtr.middlewares=chain-auth@file"
      ## HTTP Services
      - "traefik.http.routers.nextcloud-rtr.rule=Host(`cloud.$DOMAINNAME`)"
      - "traefik.http.routers.nextcloud-rtr.service=nextcloud"
      ### Enable the server port
      - "traefik.http.services.nextcloud.loadbalancer.server.port=80"
      ## Extra no-auth endpoint. No need to create a new service
      - "traefik.http.routers.nextcloud-noauth-rtr.rule=Host(`cloud-noauth.$DOMAINNAME`)"
      - "traefik.http.routers.nextcloud-noauth-rtr.middlewares=chain-no-auth@file"
      - "traefik.http.routers.nextcloud-noauth-rtr.service=nextcloud"

  nextcloud-db:
    image: mariadb:11.8.2@sha256:2bcbaec92bd9d4f6591bc8103d3a8e6d0512ee2235506e47a2e129d190444405
    container_name: nextcloud-db
    command: --transaction-isolation=READ-COMMITTED --log-bin=binlog --binlog-format=ROW
    restart: always
    security_opt:
      - no-new-privileges=true
    networks:
      - nextcloud-backend
    volumes:
      - nextcloud_db_data:/var/lib/mysql
    mem_limit: 1024m
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - MYSQL_ROOT_PASSWORD=${NEXTCLOUD_MYSQL_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${NEXTCLOUD_MYSQL_PASSWORD}
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MARIADB_AUTO_UPGRADE=1
      - MARIADB_DISABLE_UPGRADE_BACKUP=1
    healthcheck:
      interval: 30s
      retries: 3
      test:
        [
          "CMD",
          "healthcheck.sh",
          "--su-mysql",
          "--connect",
          "--innodb_initialized"
        ]
      timeout: 30s

  nextcloud-redis:
    image: redis:7.4.5-alpine@sha256:bb186d083732f669da90be8b0f975a37812b15e913465bb14d845db72a4e3e08
    container_name: nextcloud-redis
    # Requirepass is needed as environment variable isn't picked up
    command: >
      --requirepass ${NEXTCLOUD_REDIS_PASSWORD}
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 20s
      timeout: 3s
    mem_limit: 1024m
    security_opt:
      - no-new-privileges=true
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - REDIS_PASSWORD=${NEXTCLOUD_REDIS_PASSWORD}
    networks:
      - nextcloud-backend

  nextcloud-cron:
    image: nextcloud:31.0.7-apache@sha256:4bd3671cdc26122bbc1e06785c65cae80404b1f525c37f4f2c13b08073beb270
    container_name: nextcloud-cron
    restart: always
    security_opt:
      - no-new-privileges=true
    networks:
      - nextcloud-backend
    volumes:
      - nextcloud_data:/var/www/html
    mem_limit: 1024m
    entrypoint: /cron.sh
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    depends_on:
      - nextcloud-db
      - nextcloud-redis

  nextcloud-db-backup:
    container_name: nextcloud-db-backup
    image: tiredofit/db-backup:4.1.21@sha256:36e7888e4887e57e3ab3ec5ecd4782f345226084df6d3fdd93b2d3e4a2162274
    depends_on:
      - nextcloud-db
    volumes:
      - $DOCKERDIR/data/backup:/backup
    networks:
      - nextcloud-backend
    mem_limit: 1024m
    environment:
      - TIMEZONE=${TZ}
      - USER_DBBACKUP=${PUID}
      - GROUP_DBBACKUP=${PGID}
      - CONTAINER_NAME=nextcloud-db-backup
      - CONTAINER_ENABLE_MONITORING=FALSE # Disables Zabbix backup statistics

      - ENABLE_NOTIFICATIONS=FALSE   # TODO: [db-backup] Use notifications (SMTP auth not supported)

      - DEFAULT_CHECKSUM=SHA1        # Set standard checksum to SHA1
      - DEFAULT_COMPRESSION=ZSTD     # Compress all with ZSTD
      - DEFAULT_BACKUP_INTERVAL=1440 # Backup every 1440 minutes = 24 hours
      - DEFAULT_BACKUP_BEGIN=0000    # Start backing up at midnight
      - DEFAULT_CLEANUP_TIME=2880    # Cleanup backups after two days

      - DEFAULT_ENCRYPT=TRUE                            # Encrypt backup files with GPG
      - DEFAULT_ENCRYPT_PASSPHRASE=${DB_ENC_PASSPHRASE} # Set encryption password

      - DB01_TYPE=mysql
      - DB01_HOST=nextcloud-db
      - DB01_NAME=nextcloud
      - DB01_USER=nextcloud
      - DB01_PORT=3306
      - DB01_PASS=${NEXTCLOUD_MYSQL_PASSWORD}
    restart: always
    security_opt:
      - no-new-privileges=true

volumes:
  nextcloud_data:
  nextcloud_db_data:

networks:
  nextcloud-frontend:
    name: nextcloud-frontend
  nextcloud-backend:
    name: nextcloud-backend
