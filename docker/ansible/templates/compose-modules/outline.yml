services:
  outline:
    image: outlinewiki/outline:0.80.3-0@sha256:35dc012bdc674b2857abb1ecff67215893050eee1b7ab0a39eecdb23cab5477d
    container_name: outline
    depends_on:
      - traefik
      - outline-db
    restart: always
    mem_limit: 1024m
    volumes:
      - outline_data:/var/lib/outline/data
    env_file: $DOCKERDIR/data/outline/docker.env
    security_opt:
      - no-new-privileges=true
    environment:
      - TZ=${TZ}
      # Outline Config
      - SECRET_KEY=${OUTLINE_SECRET_KEY}
      - UTILS_SECRET=${OUTLINE_UTILS_SECRET}
      - REDIS_URL=redis://:${OUTLINE_REDIS_PASSWORD}@outline-redis:6379
      - URL=https://docs.$DOMAINNAME
      - PORT=3000
      ## Authentication
      - AZURE_CLIENT_ID=${OUTLINE_AZURE_CLIENT_ID}
      - AZURE_CLIENT_SECRET=${OUTLINE_AZURE_CLIENT_SECRET}
      - AZURE_RESOURCE_APP_ID=${OUTLINE_AZURE_RESOURCE_APP_ID}
      ## Database
      - DATABASE_URL=postgresql://outline:${OUTLINE_DB_PASSWORD}@outline-db:5432/outline?connect_timeout=300
      - PGSSLMODE=disable
    networks:
      - t2_proxy
      - outline-backend
    labels:
      # Homepage
      - homepage.group=Productivity
      - homepage.name=Outline
      - homepage.icon=si-outline
      - homepage.href=https://docs.$DOMAINNAME
      - homepage.description=Documentation
      # Traefik
      - "traefik.enable=true"
      ## Middlewares
      - "traefik.http.routers.outline-rtr.middlewares=chain-auth@file"
      - "traefik.http.routers.outline-rtr.rule=Host(`docs.$DOMAINNAME`)"
      ## HTTP Services
      - "traefik.http.routers.outline-rtr.service=outline-svc"
      - "traefik.http.services.outline-svc.loadbalancer.server.port=3000"

  outline-db:
    image: docker.io/library/postgres:16.4-alpine@sha256:d898b0b78a2627cb4ee63464a14efc9d296884f1b28c841b0ab7d7c42f1fffdf
    container_name: outline-db
    restart: always
    security_opt:
      - no-new-privileges=true
    mem_limit: 1024m
    volumes:
      - outline_db_data:/var/lib/postgresql/data
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - POSTGRES_DB=outline
      - POSTGRES_USER=outline
      - POSTGRES_PASSWORD=${OUTLINE_DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - outline-backend

  outline-db-backup:
    container_name: outline-db-backup
    image: tiredofit/db-backup:4.1.4@sha256:6df3a87b288d00d2f00f87f3dd2314eba793d3a34b500d3fcef3a1b598946e3d
    depends_on:
      - outline-db
    volumes:
      - $DOCKERDIR/data/backup:/backup
    mem_limit: 1024m
    networks:
      - outline-backend
      # - mailrise
    environment:
      - TIMEZONE=${TZ}
      - USER_DBBACKUP=${PUID}
      - GROUP_DBBACKUP=${PGID}
      - CONTAINER_NAME=outline-db-backup
      - CONTAINER_ENABLE_MONITORING=FALSE # Disables Zabbix backup statistics

      # TODO: [mailrise] Fix mailrise and add it to ext
      # - ENABLE_NOTIFICATIONS=TRUE
      # - NOTIFICATION_TYPE=EMAIL
      # - SMTP_HOST=mailrise
      # - SMTP_PORT=${NOTIFICATIONS_MAILRISE_SMTP_PORT}
      # - MAIL_TO=msteams@mailrise.xyz
      # - MAIL_FROM=outline-db-backup

      - DEFAULT_CHECKSUM=SHA1        # Set standard checksum to SHA1
      - DEFAULT_COMPRESSION=ZSTD     # Compress all with ZSTD
      - DEFAULT_BACKUP_INTERVAL=1440 # Backup every 1440 minutes = 24 hours
      - DEFAULT_BACKUP_BEGIN=0000    # Start backing up at midnight
      - DEFAULT_CLEANUP_TIME=2880    # Cleanup backups after two days

      - DEFAULT_ENCRYPT=TRUE                            # Encrypt backup files with GPG
      - DEFAULT_ENCRYPT_PASSPHRASE=${DB_ENC_PASSPHRASE} # Set encryption password

      - DB01_TYPE=pgsql
      - DB01_HOST=outline-db
      - DB01_NAME=outline
      - DB01_USER=outline
      - DB01_PORT=5432
      - DB01_PASS=${OUTLINE_DB_PASSWORD}
    restart: always
    security_opt:
      - no-new-privileges=true

  outline-redis:
    image: redis:alpine3.19@sha256:892b41c092a599f76c30b48e9dcfb185ce8cea3560970b1c4f2745c89bb34344
    container_name: outline-redis
    # Requirepass is needed as environment variable isn't picked up
    command: >
      --requirepass ${OUTLINE_REDIS_PASSWORD}
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 20s
      timeout: 3s
    mem_limit: 1024m
    security_opt:
      - no-new-privileges=true
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - REDIS_PASSWORD=${OUTLINE_REDIS_PASSWORD}
    networks:
      - outline-backend

volumes:
  outline_data:
  outline_db_data:

networks:
  outline-backend:
    name: outline-backend
    driver: bridge
