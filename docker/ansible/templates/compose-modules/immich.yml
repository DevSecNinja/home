services:
  immich-server:
    image: ghcr.io/immich-app/immich-server:v1.136.0@sha256:8c9633b96ca5b748b10875a99c498ee6f1e5d7f7d1df2bf341909cacb88ad672
    container_name: immich-server
    depends_on:
      - traefik
      - immich-db
      - immich-redis
    restart: always
    mem_limit: 1024m
    # extends:
    #   file: hwaccel.transcoding.yml
    #   service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    volumes:
      - /mnt/smb_share_photos/immich:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    security_opt:
      - no-new-privileges=true
    healthcheck:
      disable: false
    environment:
      - TZ=${TZ}
      - DB_HOSTNAME=immich-db
      - DB_USERNAME=immich
      - DB_DATABASE_NAME=immich
      - DB_PASSWORD=${IMMICH_DB_PASSWORD}
      #- DB_URL=postgresql://immich:${IMMICH_DB_PASSWORD}@immich-db:5432/immich?connect_timeout=300
      - REDIS_HOSTNAME=immich-redis
      - REDIS_PASSWORD=${IMMICH_REDIS_PASSWORD}
      #- REDIS_URL=redis://:${IMMICH_REDIS_PASSWORD}@immich-redis:6379
    labels:
      # Homepage
      - homepage.group=Productivity
      - homepage.name=Immich
      - homepage.icon=si-immich
      - homepage.href=https://photos.$DOMAINNAME
      - homepage.description=Photo Library
      # Traefik
      - "traefik.enable=true"
      - "traefik.docker.network=immich-frontend"
      ## Middlewares
      - "traefik.http.routers.immich-rtr.middlewares=chain-auth@file"
      - "traefik.http.routers.immich-rtr.rule=Host(`photos.$DOMAINNAME`)"
      ## HTTP Services
      - "traefik.http.routers.immich-rtr.service=immich-svc"
      - "traefik.http.services.immich-svc.loadbalancer.server.port=2283"
      ## Extra no-auth endpoint. No need to create a new service
      - "traefik.http.routers.immich-noauth-rtr.rule=Host(`photos-noauth.$DOMAINNAME`)"
      - "traefik.http.routers.immich-noauth-rtr.middlewares=chain-no-auth@file"
      - "traefik.http.routers.immich-noauth-rtr.service=immich-svc"
    networks:
      - immich-frontend
      - immich-backend

  immich-machine-learning:
    # For hardware acceleration, add one of -[armnn, cuda, rocm, openvino, rknn] to the image tag.
    image: ghcr.io/immich-app/immich-machine-learning:v1.136.0@sha256:198d52734136fe9840866cc2f48a8141e0d002c2a25be7e35cd28ef7936b6c67
    container_name: immich-machine-learning
    # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
    #   file: hwaccel.ml.yml
    #   service: cpu # set to one of [armnn, cuda, rocm, openvino, openvino-wsl, rknn] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    volumes:
      - immich_model_cache_data:/cache
    restart: always
    healthcheck:
      disable: false
    mem_limit: 4096m
    security_opt:
      - no-new-privileges=true
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - immich-backend

  immich-redis:
    image: docker.io/valkey/valkey:8-alpine@sha256:e5e6cbd527c9848b263b956872184df549af888112823cca71812d787cd06d60
    container_name: immich-redis
    # Requirepass is needed as environment variable isn't picked up
    command: >
      --requirepass ${IMMICH_REDIS_PASSWORD}
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 3
    mem_limit: 1024m
    security_opt:
      - no-new-privileges=true
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - REDIS_PASSWORD=${IMMICH_REDIS_PASSWORD}
    networks:
      - immich-backend

  immich-db:
    # Note: The immich-app/postgres image is a custom build of the official Postgres image with pgvector support.
    image: ghcr.io/immich-app/postgres:14-vectorchord0.3.0-pgvectors0.2.0@sha256:f36625fffae9611b0e6e28cc1a9bb573d20a9d3cc5e62ab0ff1a19874e34e1f4
    container_name: immich-db
    restart: always
    security_opt:
      - no-new-privileges=true
    mem_limit: 1024m
    volumes:
      - immich_db_data:/var/lib/postgresql/data
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - POSTGRES_DB=immich
      - POSTGRES_USER=immich
      - POSTGRES_PASSWORD=${IMMICH_DB_PASSWORD}
      - POSTGRES_INITDB_ARGS=--data-checksums
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d immich -U immich"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - immich-backend

  immich-db-backup:
    container_name: immich-db-backup
    image: tiredofit/db-backup:4.1.21@sha256:36e7888e4887e57e3ab3ec5ecd4782f345226084df6d3fdd93b2d3e4a2162274
    # Uses s6 overlay which requires running as uid 0 first
    # S6 will drop to USER_DBBACKUP/GROUP_DBBACKUP after startup
    # user: "${PUID}:${PGID}"
    depends_on:
      - immich-db
    volumes:
      - /mnt/smb_share_backup/immich-db:/backup
    mem_limit: 1024m
    networks:
      - immich-backend
      # - mailrise
    environment:
      - TIMEZONE=${TZ}
      - USER_DBBACKUP=${PUID}
      - GROUP_DBBACKUP=${PGID}
      - CONTAINER_NAME=immich-db-backup
      - CONTAINER_ENABLE_MONITORING=FALSE # Disables Zabbix backup statistics

      # TODO: [mailrise] Fix mailrise and add it to ext
      # - ENABLE_NOTIFICATIONS=TRUE
      # - NOTIFICATION_TYPE=EMAIL
      # - SMTP_HOST=mailrise
      # - SMTP_PORT=${NOTIFICATIONS_MAILRISE_SMTP_PORT}
      # - MAIL_TO=msteams@mailrise.xyz
      # - MAIL_FROM=immich-db-backup

      - DEFAULT_CHECKSUM=SHA1        # Set standard checksum to SHA1
      - DEFAULT_COMPRESSION=ZSTD     # Compress all with ZSTD
      - DEFAULT_BACKUP_INTERVAL=1440 # Backup every 1440 minutes = 24 hours
      - DEFAULT_BACKUP_BEGIN=0000    # Start backing up at midnight
      - DEFAULT_CLEANUP_TIME=2880    # Cleanup backups after two days

      - DEFAULT_ENCRYPT=TRUE                            # Encrypt backup files with GPG
      - DEFAULT_ENCRYPT_PASSPHRASE=${DB_ENC_PASSPHRASE} # Set encryption password

      - DB01_TYPE=pgsql
      - DB01_HOST=immich-db
      - DB01_NAME=immich
      - DB01_USER=immich
      - DB01_PORT=5432
      - DB01_PASS=${IMMICH_DB_PASSWORD}
    restart: always
    security_opt:
      - no-new-privileges=true

volumes:
  immich_model_cache_data:
  immich_db_data:

networks:
  immich-frontend:
    name: immich-frontend
  immich-backend:
    name: immich-backend
