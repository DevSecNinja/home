services:
  n8n:
    image: n8nio/n8n:1.75.2@sha256:6cf38471f4a368ba0d50dbec31bba0310a4e12565852619d79477953eb010e39
    container_name: n8n
    depends_on:
      - traefik
      - n8n-db
    restart: always
    networks:
      - n8n-frontend
      - n8n-backend
    security_opt:
      - no-new-privileges=true
    mem_limit: 500m
    environment:
      - TZ=${TZ}
      # Database
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=n8n-db
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=${N8N_DB_PASSWORD}
    volumes:
      - n8n_data:/home/node/.n8n
    labels:
      # Homepage
      - homepage.group=Productivity
      - homepage.name=n8n
      - homepage.icon=n8n.svg
      - homepage.href=https://n8n.$DOMAINNAME
      - homepage.description=Workflow Automation
      # Group
      - org.label-schema.group=productivity
      # Traefik
      - "traefik.enable=true"
      - "traefik.docker.network=n8n-frontend"
      ## Middlewares
      - "traefik.http.routers.n8n-rtr.middlewares=chain-auth@file"
      - "traefik.http.routers.n8n-rtr.rule=Host(`n8n.$DOMAINNAME`)"
      ## HTTP Services
      - "traefik.http.routers.n8n-rtr.service=n8n"
      ### Enable the server port
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"

  n8n-db:
    image: docker.io/library/postgres:16.6-alpine@sha256:aba1fab94626cf8b0f4549055214239a37e0a690f03f142b7bca05b9ed36c6db
    container_name: n8n-db
    restart: always
    security_opt:
      - no-new-privileges=true
    mem_limit: 1024m
    volumes:
      - n8n_db_data:/var/lib/postgresql/data
      - $DOCKERDIR/data/n8n/init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - POSTGRES_DB=n8n
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=${N8N_DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - n8n-backend

  n8n-db-backup:
    container_name: n8n-db-backup
    image: tiredofit/db-backup:4.1.14@sha256:23dd6392a2b448269b4b67e8b357090304536858791d82e4e360dcfaaa438ba3
    depends_on:
      - n8n-db
    mem_limit: 512m
    networks:
      - n8n-backend
    environment:
      - TIMEZONE=${TZ}
      - USER_DBBACKUP=${PUID}
      - GROUP_DBBACKUP=${PGID}
      - CONTAINER_NAME=n8n-db-backup
      - CONTAINER_ENABLE_MONITORING=FALSE # Disables Zabbix backup statistics

      - DEFAULT_CHECKSUM=SHA1        # Set standard checksum to SHA1
      - DEFAULT_COMPRESSION=ZSTD     # Compress all with ZSTD
      - DEFAULT_BACKUP_INTERVAL=1440 # Backup every 1440 minutes = 24 hours
      - DEFAULT_BACKUP_BEGIN=0000    # Start backing up at midnight
      - DEFAULT_CLEANUP_TIME=2880    # Cleanup backups after two days

      - DEFAULT_ENCRYPT=TRUE                            # Encrypt backup files with GPG
      - DEFAULT_ENCRYPT_PASSPHRASE=${DB_ENC_PASSPHRASE} # Set encryption password

      - DEFAULT_BACKUP_LOCATION=blobxfer
      - DEFAULT_BLOBXFER_STORAGE_ACCOUNT=${DB_BACKUP_SA_NAME}
      - DEFAULT_BLOBXFER_STORAGE_ACCOUNT_KEY=${DB_BACKUP_SA_KEY}
      - DEFAULT_BLOBXFER_REMOTE_PATH=${DB_BACKUP_SA_PATH}
      - DEFAULT_BLOBXFER_MODE=${DB_BACKUP_SA_MODE}

      - DB01_TYPE=pgsql
      - DB01_HOST=n8n-db
      - DB01_NAME=n8n
      - DB01_USER=n8n
      - DB01_PORT=5432
      - DB01_PASS=${N8N_DB_PASSWORD}
    restart: always
    security_opt:
      - no-new-privileges=true

volumes:
  n8n_db_data:
  n8n_data:

networks:
  n8n-frontend:
    name: n8n-frontend
    driver: bridge
  n8n-backend:
    name: n8n-backend
    driver: bridge
