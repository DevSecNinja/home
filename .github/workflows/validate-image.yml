name: Validate Docker image

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - 'renovate/**'
  #   paths:
  #     - 'docker/ansible/templates/compose-modules/**'

permissions:
   contents: read

jobs:
  changed-files:
    name: Get changed files
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.changed-files.outputs.all_changed_files }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          matrix: true
          files: |
             docker/ansible/templates/compose-modules/**.yml
      - name: List all changed files
        run: echo '${{ steps.changed-files.outputs.all_changed_files }}'

  matrix-job:
    name: Run Matrix Job
    runs-on: ubuntu-latest
    needs: [changed-files]
    strategy:
      matrix:
        files: ${{ fromJSON(needs.changed-files.outputs.matrix) }}
      max-parallel: 4
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Test
        run: |
          echo ${{ matrix.files }}
      - name: Setup Docker
        uses: docker/setup-buildx-action@v1
      - name: Setup Trivy
        uses: aquasecurity/trivy-action@master
      - name: Get image ID
        id: getimage
        # TODO: [validate-image] Make pipeline compatible with multiple images
        run: |
          IMAGE_ID=$(cat ${{ matrix.files }} | grep 'image' | sed 's/image:\s*//g' | tr -d '[:blank:]' | head -n 1
          echo "::set-output name=imageid::$IMAGE_ID"
      - name: Run Trivy on the image
        run: |
          IMAGE_ID=${{ steps.getimage.outputs.imageid }}
          if [[ -n "$IMAGE_ID" ]]; then
            SCAN=$(trivy image $IMAGE_ID)
            ARCHITECTURE=$(echo "$SCAN" | grep 'Metadata/ImageConfig/architecture' | cut -d'=' -f2 | tr -d ' ')
            if [[ "$ARCHITECTURE" != "amd64" ]]; then
              echo "Image architecture is not amd64!"
              exit 1
            fi
          fi
