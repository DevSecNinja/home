name: Validate Docker image

on:
  workflow_dispatch:
  push:
    branches:
      - 'renovate/**'
    paths:
      - 'docker/ansible/templates/compose-modules/**'

permissions:
  security-events: write
  contents: read

jobs:
  changed-files:
    name: Get changed files
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.changed-files.outputs.all_changed_files }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          matrix: true
          files: |
             docker/ansible/templates/compose-modules/**.yml
      - name: List all changed files
        run: echo '${{ steps.changed-files.outputs.all_changed_files }}'

  matrix-job:
    name: Run Matrix Job
    runs-on: ubuntu-latest
    needs: [changed-files]
    if: ${{ needs.changed-files.outputs.matrix != '[]' && needs.changed-files.outputs.matrix != '' }}
    strategy:
      matrix:
        files: ${{ fromJSON(needs.changed-files.outputs.matrix) }}
      max-parallel: 4
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get image ID
        id: getimage
        # TODO: [validate-image] Make pipeline compatible with multiple images
        run: |
          IMAGE_ID=$(cat ${{ matrix.files }} | grep 'image' | sed 's/image:\s*//g' | tr -d '[:blank:]' | head -n 1
          echo "::set-output name=imageid::$IMAGE_ID"

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.21.0
        with:
          image-ref: '${{ IMAGE_ID }}'
          format: 'sarif'
          severity: 'CRITICAL,HIGH'
          output: 'trivy-results.sarif'

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.21.0
        with:
          image-ref: '${{ IMAGE_ID }}'
          format: 'json'
          severity: 'CRITICAL,HIGH'
          output: 'trivy-results.json'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

      # - name: Run Trivy on the image
      #   run: |
      #     IMAGE_ID=${{ steps.getimage.outputs.imageid }}
      #     if [[ -n "$IMAGE_ID" ]]; then
      #       SCAN=$(trivy image $IMAGE_ID --format json)
      #       ARCHITECTURE=$(echo $SCAN | jq -r '.Metadata.ImageConfig.architecture')
      #       if [[ "$ARCHITECTURE" != "amd64" ]]; then
      #         echo "Image architecture is not amd64! It is $ARCHITECTURE [$IMAGE_ID]"
      #         exit 1
      #       else
      #         echo "Architecture is amd64 [$IMAGE_ID]"
      #       fi
      #     fi
